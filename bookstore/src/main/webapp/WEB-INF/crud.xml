<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/mvc
                    http://www.springframework.org/schema/mvc/spring-mvc.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security.xsd">
    <context:component-scan base-package="org.book"/>
    <sec:global-method-security pre-post-annotations="enabled"/>
    <mvc:annotation-driven/>
    <!-- MVC view resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- zrodlo i polaczenie z baza stosujemy c3p0 →
    Pula polaczen — otwiera i przechowuje polaczenia. Nie ma potrzeby tworzenia nowego polaczenia
    za każdym razem, co poprawia wydajność całego systemu.-->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost/jpa2021?serverTimezone=Europe/Warsaw"/>
        <property name="user" value="jpa2021"/>
        <property name="password" value="jpa2021"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="50"/>
        <property name="maxIdleTime" value="30000"/>
    </bean>
    <!-- Hibernate session factory //+znane nam wstrzykiwanie zaleznosci w beanow -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="org.book.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    <!--Hibernate transaction manager -->
    <bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="25"/>
        <property name="username" value="*******@gmail.com"/>
        <property name="password" value="******"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
    <!-- Pozwala na automatyczna obsluge transkacji bez pisania dodatkowego kodu -->
    <tx:annotation-driven transaction-manager="myTransactionManager"/>
    <!-- katalog z zasobami strony, zdjecia, skrypty, style -->
    <mvc:resources location="/resources/" mapping="/resources/**"/>
    <bean id="bcrypt" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/login"/>
    <mvc:view-controller path="/logout"/>
    <sec:http>
        <sec:intercept-url pattern="/" access="permitAll()"/>
        <sec:intercept-url pattern="/bookstore/adminregister" access="hasIpAddress('127.0.0.1') or hasIpAddress('::1')"/>
        <sec:intercept-url pattern="/bookstore/register" access="permitAll()"/>
        <sec:intercept-url pattern="/bookstore/login" access="isAnonymous()"/>
        <sec:intercept-url pattern="/bookstore/logout" access="isAuthenticated()"/>
<!--        <sec:intercept-url pattern="/bookstore/success" access="isAuthenticated()"/>-->
<!--        <sec:intercept-url pattern="/bookstore/cart/**" access="hasAuthority('ROLE_USER')"/>-->
<!--        <sec:intercept-url pattern="/bookstore/user/**" access="hasRole('USER')"/>-->
<!--        <sec:intercept-url pattern="/bookstore/orders" access="isAuthenticated()"/>-->
<!--        <sec:intercept-url pattern="/bookstore/books/list" access="isAuthenticated()"/>-->
<!--        <sec:intercept-url pattern="/bookstore/books/pdf" access="isAuthenticated()"/>-->
        <sec:intercept-url pattern="/bookstore/**" access="hasAuthority('ADMIN')"/>
<!--        <sec:form-login login-page="/bookstore/login" authentication-success-forward-url="/success" authentication-failure-url="/login?error=true" />-->
        <sec:form-login login-page="/login" default-target-url="/" authentication-failure-url="/login?error=true" />
        <sec:logout logout-success-url="/"/>
    </sec:http>
    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:password-encoder ref="bcrypt"/>
            <sec:jdbc-user-service data-source-ref="myDataSource"/>
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>
